<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="classEstacion" kind="class" prot="public">
    <compoundname>Estacion</compoundname>
    <includes refid="estacion_8h" local="no">estacion.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEstacion_1dc9f5da605c162e97e2714a987e1c51d" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="classplanta" kindref="compound">planta</ref> * &gt;</type>
        <definition>vector&lt;planta*&gt; Estacion::vec</definition>
        <argsstring></argsstring>
        <name>vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="11" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEstacion_13d75dfcb9e611287a941c27a3b4e4876" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Estacion::turnosimulacion</definition>
        <argsstring></argsstring>
        <name>turnosimulacion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="14" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEstacion_1623f9eab2dc3b079c6b73f22edb2d8a0" prot="private" static="no" mutable="no">
        <type>queue&lt; <ref refid="classPersonaje" kindref="compound">Personaje</ref> * &gt;</type>
        <definition>queue&lt;Personaje*&gt; Estacion::salaprisioneros</definition>
        <argsstring></argsstring>
        <name>salaprisioneros</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="15" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEstacion_14347660ccff1be4760f8d696aca1e0a5" prot="private" static="no" mutable="no">
        <type>queue&lt; <ref refid="classPersonaje" kindref="compound">Personaje</ref> * &gt;</type>
        <definition>queue&lt;Personaje*&gt; Estacion::desalojados</definition>
        <argsstring></argsstring>
        <name>desalojados</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="16" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classEstacion_1eb58e5e8be51f356cf351cb52f160f2d" prot="private" static="yes" mutable="no">
        <type><ref refid="classEstacion" kindref="compound">Estacion</ref> *</type>
        <definition>Estacion * Estacion::miEstacion</definition>
        <argsstring></argsstring>
        <name>miEstacion</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="12" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classEstacion_16607e0576a7342860de2973cca949bb5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Estacion::Estacion</definition>
        <argsstring>()</argsstring>
        <name>Estacion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo constructor por defecto de la clase <ref refid="classEstacion" kindref="compound">Estacion</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&quot;&quot;</parametername>
</parameternamelist>
<parameterdescription>
<para>No recibe parametros </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="13" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classEstacion_17ccecfbe6a3cea5fd897cfce7851a005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::insertarVector</definition>
        <argsstring>(planta *p)</argsstring>
        <name>insertarVector</name>
        <param>
          <type><ref refid="classplanta" kindref="compound">planta</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que inserta en un vector de plantas una <ref refid="classplanta" kindref="compound">planta</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>es un objeto de la clase Planta </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="21" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_130787e042212e82f38bd54868a673744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::generar</definition>
        <argsstring>(ofstream &amp;f)</argsstring>
        <name>generar</name>
        <param>
          <type>ofstream &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que genera las plantas,calcula las rutas, controla los turnos...etc <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>es un flujo de entrada salida que escribe en mi fichero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>Hacer el log de los personajes que son prisioneros</para><para>log de los personajes que son prisioneros </para>        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="22" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="53" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_19cd8459a6f9c14168bd92edb88c68757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::insertarPersonajeEstacion</definition>
        <argsstring>(Personaje *p)</argsstring>
        <name>insertarPersonajeEstacion</name>
        <param>
          <type><ref refid="classPersonaje" kindref="compound">Personaje</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que inserta un personaje en su <ref refid="classplanta" kindref="compound">planta</ref> correspodiente y dentro de la <ref refid="classsala" kindref="compound">sala</ref> correspondiente con su idsala <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>es un objeto de la clase <ref refid="classPersonaje" kindref="compound">Personaje</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="23" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_1846fcf5591b3a021072365cfd7902b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::obtenerPlanta</definition>
        <argsstring>(int idp, planta *&amp;p)</argsstring>
        <name>obtenerPlanta</name>
        <param>
          <type>int</type>
          <declname>idp</declname>
        </param>
        <param>
          <type><ref refid="classplanta" kindref="compound">planta</ref> *&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que devuelve la <ref refid="classplanta" kindref="compound">planta</ref> que se corresponde con el entero idp <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idp</parametername>
</parameternamelist>
<parameterdescription>
<para>es un parametro de entrada que corresponde con la casilla del vector de plantas que quiero obtener </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>es un parametro puntero de entrada salida que devuelve la <ref refid="classplanta" kindref="compound">planta</ref> correspondiente a la celda del vector idp </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="24" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_15ab63daf24099fe7f461049191c5f45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Estacion::totalPlantas</definition>
        <argsstring>()</argsstring>
        <name>totalPlantas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que devuelve el entero asociado al tamaño de mi vector de plantas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&quot;&quot;</parametername>
</parameternamelist>
<parameterdescription>
<para>no tiene parametros </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Devuelve un entero que se corresponde con el tamaño de mi vector de plantas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="25" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_1b823f96e5395cf3b55ddfe2a380066a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::calcularRutaPlantasEstacion</definition>
        <argsstring>(ofstream &amp;f)</argsstring>
        <name>calcularRutaPlantasEstacion</name>
        <param>
          <type>ofstream &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que calcula las rutas de las salas de las plantas de mi vector de plantas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>es un flujo de entrada salida que escribe en mi fichero todo lo correspondiente a las rutas de los personajes que almacenan las salas de cada una de las plantas de mi vector de plantas </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="27" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_15e2d125234916b8011eabaf9735fd859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::insertarSalaPrisioneros</definition>
        <argsstring>(Personaje *per)</argsstring>
        <name>insertarSalaPrisioneros</name>
        <param>
          <type><ref refid="classPersonaje" kindref="compound">Personaje</ref> *</type>
          <declname>per</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que inserta en mi atributo cola salaprisioneros un personaje <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>per</parametername>
</parameternamelist>
<parameterdescription>
<para>es un parametro de entrada de la clase <ref refid="classPersonaje" kindref="compound">Personaje</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="28" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_161418af028ef6a48d6ccdd125cd739d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::setTurnoSimulacion</definition>
        <argsstring>(int t)</argsstring>
        <name>setTurnoSimulacion</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que asigna un valor entero a mi atributo turnosimulacion de mi clase estacion <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>es un parametro de entrada del tipo entero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="30" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_1d0ea7dfe20aa29bf0dfc984849fbab1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::accionesPersonajesPlanta</definition>
        <argsstring>()</argsstring>
        <name>accionesPersonajesPlanta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que realiza las acciones de los personajes de cada <ref refid="classplanta" kindref="compound">planta</ref> con sus correspondientes salas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&quot;&quot;</parametername>
</parameternamelist>
<parameterdescription>
<para>no recibe parametros </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="31" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_1e33e40e284a7e35858fef85ab1c13b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Estacion::getTurnoSimulacion</definition>
        <argsstring>()</argsstring>
        <name>getTurnoSimulacion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que devuelve el entero que se corresponde con el atributo turnosimulacion de mi clase estacion <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&quot;&quot;</parametername>
</parameternamelist>
<parameterdescription>
<para>no recibe parametros </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna un entero que se corresponde con el atributo turnosimulacion de mi clase estacion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="32" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_1b130dedc0129c5a913415d3bacebd529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::insertarDesalojado</definition>
        <argsstring>(Personaje *p)</argsstring>
        <name>insertarDesalojado</name>
        <param>
          <type><ref refid="classPersonaje" kindref="compound">Personaje</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que inserta un personaje en en el atributo cola desalojados <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>es un parametro de entrada de la clase <ref refid="classPersonaje" kindref="compound">Personaje</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="33" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_1fd81b9f346dce9a850fc2c612949d211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Estacion::escribeLogDesalojados</definition>
        <argsstring>(ofstream &amp;f)</argsstring>
        <name>escribeLogDesalojados</name>
        <param>
          <type>ofstream &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo que escribe en mi registro.log los personajes contenidos en mi cola desalojados <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>es un flujo de entrada salida que escribe en mi registro.log la informacion correspondiente a los personajes contenidos en mi atributo cola desalojados. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="34" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="222" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classEstacion_1c774576e546f622b60b08b0a952e6a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Estacion::~Estacion</definition>
        <argsstring>()</argsstring>
        <name>~Estacion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metodo Destructor de la clase <ref refid="classEstacion" kindref="compound">Estacion</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&quot;&quot;</parametername>
</parameternamelist>
<parameterdescription>
<para>No recibe parametros </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>No retorna ningun valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="35" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="20" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classEstacion_1f0728410da6356cae82e39b90d6eab76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classEstacion" kindref="compound">Estacion</ref> *</type>
        <definition>Estacion * Estacion::obtenerMiEstacion</definition>
        <argsstring>()</argsstring>
        <name>obtenerMiEstacion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="26" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.cpp" bodystart="147" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Carlos,,, &lt;carlos-linux&gt; </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="16">
        <label>Estacion</label>
        <link refid="classEstacion"/>
        <childnode refid="16" relation="usage">
          <edgelabel>miEstacion</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" line="10" bodyfile="/home/carlos/Desktop/academia_lp2/EC3_LPII/src/estacion.h" bodystart="10" bodyend="37"/>
    <listofallmembers>
      <member refid="classEstacion_1d0ea7dfe20aa29bf0dfc984849fbab1f" prot="public" virt="non-virtual"><scope>Estacion</scope><name>accionesPersonajesPlanta</name></member>
      <member refid="classEstacion_1b823f96e5395cf3b55ddfe2a380066a7" prot="public" virt="non-virtual"><scope>Estacion</scope><name>calcularRutaPlantasEstacion</name></member>
      <member refid="classEstacion_14347660ccff1be4760f8d696aca1e0a5" prot="private" virt="non-virtual"><scope>Estacion</scope><name>desalojados</name></member>
      <member refid="classEstacion_1fd81b9f346dce9a850fc2c612949d211" prot="public" virt="non-virtual"><scope>Estacion</scope><name>escribeLogDesalojados</name></member>
      <member refid="classEstacion_16607e0576a7342860de2973cca949bb5" prot="private" virt="non-virtual"><scope>Estacion</scope><name>Estacion</name></member>
      <member refid="classEstacion_130787e042212e82f38bd54868a673744" prot="public" virt="non-virtual"><scope>Estacion</scope><name>generar</name></member>
      <member refid="classEstacion_1e33e40e284a7e35858fef85ab1c13b19" prot="public" virt="non-virtual"><scope>Estacion</scope><name>getTurnoSimulacion</name></member>
      <member refid="classEstacion_1b130dedc0129c5a913415d3bacebd529" prot="public" virt="non-virtual"><scope>Estacion</scope><name>insertarDesalojado</name></member>
      <member refid="classEstacion_19cd8459a6f9c14168bd92edb88c68757" prot="public" virt="non-virtual"><scope>Estacion</scope><name>insertarPersonajeEstacion</name></member>
      <member refid="classEstacion_15e2d125234916b8011eabaf9735fd859" prot="public" virt="non-virtual"><scope>Estacion</scope><name>insertarSalaPrisioneros</name></member>
      <member refid="classEstacion_17ccecfbe6a3cea5fd897cfce7851a005" prot="public" virt="non-virtual"><scope>Estacion</scope><name>insertarVector</name></member>
      <member refid="classEstacion_1eb58e5e8be51f356cf351cb52f160f2d" prot="private" virt="non-virtual"><scope>Estacion</scope><name>miEstacion</name></member>
      <member refid="classEstacion_1f0728410da6356cae82e39b90d6eab76" prot="public" virt="non-virtual"><scope>Estacion</scope><name>obtenerMiEstacion</name></member>
      <member refid="classEstacion_1846fcf5591b3a021072365cfd7902b4c" prot="public" virt="non-virtual"><scope>Estacion</scope><name>obtenerPlanta</name></member>
      <member refid="classEstacion_1623f9eab2dc3b079c6b73f22edb2d8a0" prot="private" virt="non-virtual"><scope>Estacion</scope><name>salaprisioneros</name></member>
      <member refid="classEstacion_161418af028ef6a48d6ccdd125cd739d6" prot="public" virt="non-virtual"><scope>Estacion</scope><name>setTurnoSimulacion</name></member>
      <member refid="classEstacion_15ab63daf24099fe7f461049191c5f45a" prot="public" virt="non-virtual"><scope>Estacion</scope><name>totalPlantas</name></member>
      <member refid="classEstacion_13d75dfcb9e611287a941c27a3b4e4876" prot="private" virt="non-virtual"><scope>Estacion</scope><name>turnosimulacion</name></member>
      <member refid="classEstacion_1dc9f5da605c162e97e2714a987e1c51d" prot="private" virt="non-virtual"><scope>Estacion</scope><name>vec</name></member>
      <member refid="classEstacion_1c774576e546f622b60b08b0a952e6a55" prot="public" virt="non-virtual"><scope>Estacion</scope><name>~Estacion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
